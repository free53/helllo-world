-- MySQL Script generated by MySQL Workbench
-- 04/13/17 17:06:05
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema db_stat
-- -----------------------------------------------------
-- 用户存放统计信息

-- -----------------------------------------------------
-- Schema db_stat
--
-- 用户存放统计信息
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_stat` ;
USE `db_stat` ;

-- -----------------------------------------------------
-- Table `db_stat`.`t_stat_daily_template`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_stat`.`t_stat_daily_template` (
  `start_dt` DATETIME(6) NOT NULL,
  `module_name` VARCHAR(50) NOT NULL,
  `type_name` VARCHAR(50) NOT NULL,
  `value` VARCHAR(20) NOT NULL,
  `module_order_id` INT NOT NULL,
  `type_order_id` INT NOT NULL,
  PRIMARY KEY (`start_dt`, `module_name`, `type_name`))
ENGINE = InnoDB;

USE `db_stat` ;

-- -----------------------------------------------------
-- Placeholder table for view `db_stat`.`v_stat_daily_template`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_stat`.`v_stat_daily_template` (`start_dt` INT, `module_name` INT, `type_name` INT, `value` INT, `module_order_id` INT, `type_order_id` INT);

-- -----------------------------------------------------
-- procedure pr_stat_daily_template
-- -----------------------------------------------------

DELIMITER $$
USE `db_stat`$$
CREATE DEFINER=`root`@`%` PROCEDURE `pr_stat_daily_template`(out p_result int, p_date datetime)
proc_start:begin
/*
功能说明：作业每天执行一次，统计前一天本平台的按键情况
统计项目：
按键率：总按键次数/计费次数
日期，接入号，总拨打次数，总按键次数，计费次数，按键率

接通率：计费次数/总拨打次数
日期	接入号	总拨打次数	 计费次数	   接通率

说明：t_compere_tel_verify_result--记录总拨打次数，t_mobile_sync_interface_log --记录计费次数，
t_log_tchat_enter -- 记录总按键次数，t_state_detail_info—记录地区信息

created by zhouzhihong at 2017-02-10
*/
set p_result = 0;
                                     
set @begin_dt = func_sys_get_last_day_begin_dt(p_date),   -- 获取前一天开始时间               
    @end_dt = func_sys_get_last_day_end_dt(p_date);  -- 获取前一天结束时间

-- //统计前先删除当日数据 
if(exists(select 1 from t_stat_daily_template where start_dt = @begin_dt))
then
	delete	from t_stat_daily_template
	where		start_dt = @begin_dt;
end if;

-- --------------------------------------------------1.	模块一-----------------------------------------------------------------------------------------
insert	into t_stat_daily_template(start_dt, sys_tel, module_name, type_name, value, module_order_id, type_order_id)
select	@begin_dt, a.sys_tel, '模块名称1', '类型名称', 0, 1, 1;


-- --------------------------------------------------2.	模块二-----------------------------------------------------------------------------------------
insert	into t_stat_daily_template(start_dt, sys_tel, module_name, type_name, value, module_order_id, type_order_id)
select	@begin_dt, a.sys_tel, '模块名称2', '类型名称', 0, 2, 1;


-- 删除一年以前的数据    
if  exists (select 1 from t_stat_daily_template where start_dt<date_add(now(),interval -12 month))    
then    
 delete     
 from t_stat_daily_template              
 where start_dt<date_add(now(),interval -12 month);
end	if;

/*
test code:
call pr_stat_daily_template(@result, NOW());
select @result;

select * from t_stat_daily_template order by 6,7;

SELECT start_dt 开始日期,
MAX(CASE type_name WHEN '类型名称' THEN value ELSE 0 END ) 类型名称,
FROM t_stat_daily_template
where module_name = '模块名称1'
GROUP BY start_dt;
*/
end proc_start$$

DELIMITER ;

-- -----------------------------------------------------
-- View `db_stat`.`v_stat_daily_template`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_stat`.`v_stat_daily_template`;
USE `db_stat`;
CREATE  OR REPLACE VIEW `v_stat_daily_template` AS
    SELECT 
        *
    FROM
        t_stat_daily_template;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
